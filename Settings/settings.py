"""
Django settings for SocialTrade project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from distutils.util import strtobool
from dotenv import load_dotenv
import pysftp

# def getenv(env):
#     """uncomment this function for production"""
#     load_dotenv()
#     return os.getenv(env)




def getenv(env):
    """uncomment this function for development"""
    project_folder=os.path.abspath(path='.')
    load_dotenv(os.path.join(project_folder, '.env'))
    return os.getenv(env)


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

AUTH_USER_MODEL = 'Models.User'

EMAIL_BACKEND = getenv('EMAIL_BACKEND')
EMAIL_USE_TLS = strtobool(getenv('EMAIL_USE_TLS'))
EMAIL_PORT = int(getenv('EMAIL_PORT'))
EMAIL_HOST = getenv('EMAIL_HOST')
EMAIL_HOST_USER = getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = getenv('EMAIL_HOST_PASSWROD')

########################### IMPORTANT ! #####################################
############################# SECURITY PAGE #################################
# SECURITY WARNING: keep the secret key used in production secret!

#generate it from generate-secret-key.py
SECRET_KEY = getenv('SECRET_KEY')
#generate it from generate-secret-key.py

# SECURITY WARNING: don't run with debug turned on in production!
# LOGIN_REDIRECT_URL = '/' #your url when logged in and will be redirect to
# LOGOUT_REDIRECT_URL = '/' #your url when logged out and will be redirect to
# LOGIN_URL = '/account/login/' #Your url login
DEBUG = strtobool(getenv('DEBUG')) #FALSE IS FOR PRODUCTION AND SET IT TRUE FOR DEVELOPMENT
SECURE_SSL_REDIRECT = strtobool(getenv('SECURE_SSL_REDIRECT')) #FALSE IS FOR DEVELOPMENT AND SET IT TRUE FOR PRODUCTION
## X-Frame-Options
X_FRAME_OPTIONS = 'DENY'
#X-Content-Type-Options
SECURE_CONTENT_TYPE_NOSNIFF = True
## Strict-Transport-Security
SECURE_HSTS_SECONDS = 15768000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
# for more security
SECURE_BROWSER_XSS_FILTER = True
CSRF_COOKIE_SECURE = True
CSRF_USE_SESSIONS = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'Strict'
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
#############################################################################
#############################################################################

ALLOWED_HOSTS = [getenv('ALLOWED_HOSTS')]

CORS_ORIGIN_WHITELIST = [getenv('CORS_ORIGIN_WHITELIST')]

CORS_ALLOW_ALL_ORIGINS = True # If this is used then `CORS_ALLOWED_ORIGINS` will not have any effect
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_CREDENTIALS = True

AUTH_USER_MODEL = 'Models.User'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.BasicAuthentication',
        # 'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        # 'Controllers.auth_token.JWT_AUTH',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 2,
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    ##################################
    'Models',
    'Controllers',
    'ViewSets',
    'Routers',
    'Helpers',
    ##################################
    'corsheaders',
    'rest_framework',
    'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'Routers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Settings.wsgi.application'

ASGI_APPLICATION = 'Settings.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

#database config
#SEE __init__.py in for mysql/mariadb database
DATABASES = {
    'default': {
        'ENGINE'    : 'django.db.backends.'+getenv('database_engine'),
        'NAME'      : getenv('database_name'),
        'USER'      : getenv('database_user'),
        'PASSWORD'  : getenv('database_password'),
        'HOST'      : getenv('database_host'),
        'PORT'      : int(getenv('database_port')),
    }
}

#redis config
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379/1",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient"
#         },
#         "KEY_PREFIX": "example"
#     }
# }

# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'asgi_redis.RedisChannelLayer',
#         'CONFIG': {
#             'hosts': [('localhost', 6379)],
#         },
#         'ROUTING': 'SocialTrade.routing.channel_routing',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'id-ID'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_L10N = True

# USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

################################
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')
################################
MEDIA_ROOT= os.path.join(BASE_DIR, 'media')
MEDIA_URL= "/media/"
################################
# srv = pysftp.Connection(host="http://soegeeapi.com:8084/", username="clstoragedev9",
# password="*usrSt8sAbc!@##Abc",log="./temp/pysftp.log")

# with srv.cd('media'): #chdir to public
#     srv.put(MEDIA_URL) #upload file to nodejs/
# Closes the connection
# srv.close()
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

